[
  {
    "img": "1.png",
    "title": "Giftly",
    "description": "This was a school project where the goal was to invent a disruptive application. </br> Giftly is a platform where you can buy a random box as a gift. You can alter the box with your preferences or keep it completely random. </br> We worked out the front end in Vue and instead of making a back-end we made every request with the Vuex store.",
    "category": "Front-end",
    "imagefolder": "Giftly",
    "github": "https://github.com/JensVanAssche/giftly",
    "demo": "https://giftly.jordypereira.be/",
    "date": "19/10/2018",
    "tech": [
      "Vue",
      "Vuex",
      "Bootstrap",
      "Team"
    ],
    "features": [
      "Shopping Cart: Choose a box and it gets saved in the cart.",
      "Lots of Vuex features, such as deleting a single object and calculating the earliest delivery date based on the packages ordered."
    ],
    "images": [
      "1.png",
      "2.png",
      "3.png",
      "4.png",
      "5.png",
      "6.png"
    ]
  },
  {
    "img": "front.png",
    "title": "Reddut",
    "description": "A blog post app made in Laravel and that I based off of reddit.",
    "category": "Back-end",
    "imagefolder": "Reddut",
    "github": "https://github.com/perjor/Reddut",
    "demo": "https://reddut.jordypereira.be/",
    "date": "01/11/2016",
    "tech": [
      "Laravel",
      "PHP",
      "Bootstrap"
    ],
    "features": [
      "Authentication: Login and Register.",
      "Create a post and comment on it.",
      "Reply on comments.",
      "Edit and delete your own posts / comments.",
      "Admin can sticky a post and delete or edit all comments and posts."
    ],
    "images": [
      "front.png",
      "post.png",
      "editPost.png"
    ]
  },
  {
    "img": "home.png",
    "title": "Intranet app",
    "description": "A CRUD app made in Flask, Python. You can log in as an admin to add teachers, classes or studies.",
    "category": "Back/end",
    "imagefolder": "Flask",
    "github": "https://github.com/perjor/secu_school",
    "demo": "",
    "date": "01/01/2018",
    "tech": [
      "Python",
      "Flask",
      "Bootstrap"
    ],
    "features": [
      "Authentication: Login as a teacher.",
      "Students can see the classes, teachers and contact info",
      "Teachers can add, edit and delete this info. They can also assign teachers to classes. "
    ],
    "images": [
      "home.png",
      "aanbod.png",
      "add_klas.png",
      "add_leerkracht.png",
      "contact.png",
      "dashboard_leerkracht.png",
      "dashboard.png",
      "edit_richting.png",
      "wie.png"
    ]
  },
  {
    "img": "home.png",
    "title": "Hsc Brabo website",
    "description": "A website for the student club HSC Brabo. </br> Also has a database website to view the users and adjust them, written in plain php.",
    "category": "Front/end",
    "imagefolder": "HSCBrabo",
    "github": "",
    "demo": "http://www.hscbrabo.be/",
    "date": "01/09/2017",
    "tech": [
      "Pug",
      "Gulp",
      "Bootstrap",
      "PHP"
    ],
    "features": [
      "4 static pages with info about the club.",
      "Praesidium list is made with pugjs mixins.",
      "Brabokot info is adjustable from an admin panel.",
      "Users can register with a form, that needs to be accepted in the admin panel."
    ],
    "images": [
      "home.png",
      "about.png",
      "db_users.png",
      "brabokot.png"
    ]
  },
  {
    "img": "home.png",
    "title": "Star Wars React App",
    "description": "A react app that loads in the star wars API and saves it's own version in a GraphQL database.",
    "category": "Front/end",
    "imagefolder": "StarWars",
    "github": "https://github.com/perjor/starwarsApp/REACT",
    "demo": "https://starwars.jordypereira.be/planets",
    "date": "01/03/2018",
    "tech": [
      "React",
      "Bootstrap",
      "API",
      "Grid",
      "GraphQL",
      "Heroku"
    ],
    "features": [
      "Load planets from the Star Wars API and choose what info you want to show.",
      "Create your own planet with its types and residents loaded from the API>",
      "Save your own planets in a GraphQL database hosted on Heroku"
    ],
    "images": [
      "home.png",
      "add_planet.png",
      "planet.png"
    ]
  },
  {
    "img": "",
    "title": "This Portfolio Site",
    "description": "This site is made in Vue.js. I use Vuex to keep a global state and the gallery is made from scratch. I decided to use Tailwind.css for the layout.",
    "category": "Front/end",
    "imagefolder": "Portfolio",
    "github": "https://github.com/perjor/portfolio.jordypereira.be",
    "demo": "",
    "date": "01/10/2018",
    "tech": [
      "Vue",
      "Tailwind",
      "Vuex"
    ],
    "features": [
      "Loads and displays projects fron a json file.",
      "Automatically switches theme based on the time of day.",
      "Changing a project actually only changes the content and forces an animation to display."
    ],
    "images": []
  },
  {
    "img": "kowloon/logo",
    "title": "Kowloon",
    "description": "<p>The final front/end school assignment. We received photoshop files for each page and for each viewport.</p><p>The website had to follow the design pixel/perfectly. </p><p>It had to be built up with atomic css and reusable components. The performance had to be optimized and perfect SEO.</p><p>You can check out <a href='https://kowloon.eu/styleguide/' class='link'>The Style guide</a></p>",
    "category": "Front/end",
    "imagefolder": "Kowloon",
    "github": "https://github.com/perjor/kowloon",
    "demo": "https://kowloon.eu",
    "date": "01/01/2019",
    "tech": [
      "Nuxt",
      "Tailwind",
      "Vuex",
      "Vue"
    ],
    "features": [
      "Dynamic routes based on category.",
      "Endless scroller.",
      "Displays articles based on data.",
      "Reusable vue components.",
      "Advanced search and filter."
    ],
    "images": [
      "kowloon/home.png",
      "kowloon/filter.png",
      "kowloon/slider.png",
      "kowloon/endless/scroll.png",
      "kowloon/sort.png"
    ]
  },
  {
    "img": "catvent/home",
    "title": "Catvent",
    "description": "<p>This was my project to try out Nuxt.</p><p>You can flip over a card with a random cat picture/gif every day, until the 25th.</p><p>The cats are chosen from a random set depending on the day you click on.</p><p>I save which cat pictures you've clicked on with 1 long string in your localStorage. That way I limit the amount of data to the bare minimum.</p><p>When you visit the page, all the images get preloaded and saved in the same string. That way, flipping the images becomes an instant experience.</p><p>Big shout out to <a href='https://thecatapi.com' class='link' target='_blank' rel='noopener'>The Cat Api</a></p>",
    "category": "Front/end",
    "imagefolder": "Catvent",
    "github": "https://github.com/perjor/catvent",
    "demo": "https://catvent.jordypereira.be/",
    "date": "01/12/2018",
    "tech": [
      "Nuxt",
      "Vue",
      "Tailwind",
      "Netlify",
      "TheCatApi",
      "Cats"
    ],
    "features": [
      "Load in a different set of random kitties per day.",
      "Preload all images.",
      "Save clicked images in 1 string in Local Storage.",
      "The Cat Face is drawn with CSS.",
      "CSS hover animation."
    ],
    "images": []
  },
  {
    "img": "catvent/home",
    "title": "Catalyser",
    "description": "<p>Proof of concept: Scan a cat's tail and get the tail position returned.</p><p>I have collected a dataset of 50 cat images to feed a pre/trained image recognizing ML model.</p><p>You can either train the model in your own browser, or load in a pre trained model that I have prepared.</p><p>It then tries to guess the test images based on the data it has received.</p><p><a href='https://streamable.com/i4bd5' class='link' target='_blank' rel='noopener'>Check out a recorded demo</a></p>",
    "category": "Front/end",
    "imagefolder": "Catvent",
    "github": "https://github.com/perjor/catalyser",
    "demo": "https://catalyser.jordypereira.be/",
    "date": "11/01/2019",
    "tech": [
      "Javascript",
      "Machine Learning",
      "ML5.js",
      "Tensorflow.js",
      "ImageNet",
      "ML",
      "Cats"
    ],
    "features": [
      "Uses a dataset of 50 cat images.",
      "Trains them according to 3 pre defined positions.",
      "Uses other images to test the trained model."
    ],
    "images": []
  },
  {
    "img": "manon22/1",
    "title": "Donate a kitty",
    "description": "<p>Here you can donate a cat image.</p><p>You can either choose your own image, which then gets checked if it's a real cat by an ML aalgorithm, or choose a random cat image.</p><p>When donating a cat, it plays a sound of a cat.</p>",
    "category": "Front/end",
    "imagefolder": "DonateACat",
    "github": "",
    "demo": "https://manon.22.jordypereira.be",
    "date": "18/03/2019",
    "tech": [
      "Javascript",
      "Machine Learning",
      "Vue",
      "ML",
      "Cats"
    ],
    "features": [
      "OC Cat sounds.",
      "ML Cat checking through the CAT Api.",
      "Event website for a birthday."
    ],
    "images": [
      "manon22-1.png",
      "manon22-2.png"
    ]
  }
]